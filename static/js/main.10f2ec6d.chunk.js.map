{"version":3,"sources":["components/personal_details.js","components/educational_quals.js","components/work_experience.js","components/submit_cv.js","App.js","index.js"],"names":["PersonalDetails","props","handleInput","e","onType","target","name","value","personal_info","editMode","class","type","onChange","email","phone","city","country","className","AddDegree","useState","showNewForm","setShowNewForm","new_degree","setNew_degree","new_uni","setNew_uni","new_desc","setNew_desc","new_start","setNew_start","new_end","setNew_end","ongoing","setOngoing","deleted","setDeleted","editing","setEditing","DisplayForm","onClick","disabled","new_ongoing","values","degree","uni","desc","start","end","onAdd","EditDegree","check_box","setNew_ongoing","handleOngoing","checked","onUpdate","index","onEdit","EducationalQual","educational_quals","i","education","console","log","push","onDelete","length","AddWork","new_designation","setNew_designation","new_company","setNew_company","new_rnr","setNew_rnr","new_from","setNew_from","new_to","setNew_to","displayForm","designation","company","rnr","from","to","EditWork","WorkExperience","work_exp","work","SubmitCV","button_text","onSubmit","App","setEditMode","setName","setEmail","setPhone","setCity","setCountry","setEducation","setWork","rerender","setRerender","education_copy","work_copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10f2ec6d.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/personalStyles.css'\n\nconst PersonalDetails = (props) =>  {\n\n    const handleInput = (e) => {\n        props.onType(e.target.name,e.target.value)\n    }\n    let personal_info=[];\n    if(props.editMode===true) {\n        personal_info=<div class=\"personalDataForm\">\n            <span>\n                <label>Name</label>\n                <input type=\"input\" name=\"name\" value={props.name} onChange={handleInput}></input>\n            </span>\n            <span>\n                <label>Email</label>\n                <input type=\"input\" name=\"email\" value={props.email} onChange={handleInput}></input>\n            </span>\n            <span>\n                <label>Phone No</label>\n                <input type=\"input\" name=\"phone\" value={props.phone} onChange={handleInput}></input>\n            </span>\n            <span>\n                <label>City</label>\n                <input type=\"input\" name=\"city\" value={props.city} onChange={handleInput}></input>\n            </span>\n            <span>\n                <label>County</label>\n                <input type=\"input\" name=\"country\" value={props.country} onChange={handleInput}></input>\n            </span>\n        </div>\n    } else {\n        personal_info=<div className=\"personalInfo\">\n            <div className=\"userName\">\n                {props.name}\n            </div>\n            <div className=\"userInfo\">\n                <table className=\"userInfoTable\">\n                    <tr>\n                        <th>Phone</th>\n                        <td>{props.phone}</td>\n                        <th>City</th>\n                        <td>{props.city}</td>\n                    </tr>\n                    <tr>\n                        <th>Email</th>\n                        <td>{props.email}</td>\n                        <th>Country</th>\n                        <td>{props.country}</td>\n                    </tr>\n                </table>      \n            </div>\n            <p>\n                I am a highly competent IT professional with a proven track record in designing websites, networking and managing databases. I am eager to be challenged in order to grow and further improve my IT skills. My greatest passion is in life is using my technical know-how to benefit other people and organisations.    \n            </p>  \n        </div>\n    }\n    return(\n        <div className=\"section\">\n            {\n                props.editMode ? (\n                    <div className=\"sectionTitle\">Personal Details</div>\n                ): null\n            }\n            {personal_info}\n        </div>\n    );\n} \n\nexport default PersonalDetails;","import React, {useState} from 'react';\nimport '../css/formStyles.css'\nimport '../css/personalStyles.css'\n\nconst AddDegree = (props) => {\n\n    const [showNewForm, setShowNewForm] = useState(false);\n    const [new_degree, setNew_degree] = useState('');\n    const [new_uni, setNew_uni] = useState('');\n    const [new_desc, setNew_desc] = useState('');\n    const [new_start, setNew_start] = useState('');\n    const [new_end, setNew_end] = useState('');\n    const [ongoing, setOngoing] = useState(false);\n    const [deleted, setDeleted] = useState(false);\n    const [editing, setEditing] = useState(false);\n\n    const DisplayForm = () => {\n        let currentNewForm;\n        currentNewForm = showNewForm? false: true;\n        setShowNewForm(currentNewForm);\n        setNew_degree('');\n        setNew_uni('');\n        setNew_desc('');\n        setNew_start('');\n        setNew_end('');\n        setOngoing(false);\n        setDeleted(false);\n        setEditing(false);\n    }\n\n    const submitForm = () => {\n        let values={\n            degree: new_degree,\n            uni: new_uni,\n            desc: new_desc,\n            start: new_start,\n            end: new_end,\n            ongoing: ongoing,\n            deleted: deleted,\n            editing: editing\n        }\n        props.onAdd(values)\n        DisplayForm()\n    }\n\n    const onType = (target,value) => {\n        let setOfVariables = {\n            \"new_degree\": setNew_degree,\n            \"new_uni\": setNew_uni,\n            \"new_desc\": setNew_desc,\n            \"new_start\": setNew_start,\n            \"new_end\": setNew_end\n        }\n        setOfVariables[target](value);\n    }\n\n    const handleInput = (e) => {\n        onType(e.target.name,e.target.value)\n    }\n\n    const handleOngoing = (e) => {\n        let new_ongoing;\n        new_ongoing = ongoing? false : true;\n        setNew_end(\"Ongoing\");\n        setOngoing(new_ongoing);\n    }\n\n    return(\n        <div className=\"addEducation\">\n            <input type=\"button\" value=\"Add\" onClick={DisplayForm} className=\"formButton\"></input><br/><br/>\n            {\n                showNewForm ?\n                <div className=\"addEditForm\">\n                    <span>\n                        <label>Degree</label>\n                        <input type=\"input\" onChange={handleInput} name=\"new_degree\" value={new_degree}></input>\n                    </span>\n                    <span>\n                        <label>University/School</label>\n                        <input type=\"input\" onChange={handleInput} name=\"new_uni\" value={new_uni}></input>\n                    </span>\n                    <span>\n                        <label>Description</label>\n                        <textarea onChange={handleInput} name=\"new_desc\" value={new_desc}></textarea>\n                    </span>\n                    <span>\n                        <label>Started</label>\n                        <input type=\"date\" onChange={handleInput} name=\"new_start\" value={new_start}></input>\n                    </span>\n                    <span>\n                        <label>Completed</label>\n                        <input type=\"date\" onChange={handleInput} name=\"new_end\" value={new_end} disabled={ongoing}></input> &nbsp;&nbsp;\n                        <input type=\"checkbox\" onChange={handleOngoing} name=\"ongoing\" value={ongoing}></input>Ongoing<br/><br/>\n                    </span>\n                    <span>\n                        <input type=\"button\" value=\"Submit\" onClick={submitForm} className=\"formButton\"></input>&nbsp;&nbsp;&nbsp;&nbsp;\n                        <input type=\"button\" value=\"Cancel\" onClick={DisplayForm} className=\"formButton\"></input>\n                    </span>\n                </div>\n                : null\n            }\n        </div>\n    );\n}\n\nconst EditDegree = (props) => {\n\n    const [new_degree, setNew_degree] = useState(props.degree);\n    const [new_uni, setNew_uni] = useState(props.uni);\n    const [new_desc, setNew_desc] = useState(props.desc);\n    const [new_start, setNew_start] = useState(props.start);\n    const [new_end, setNew_end] = useState(props.end);\n    const [new_ongoing, setNew_ongoing] = useState(props.ongoing);\n\n    const handleInput = (e) => {\n        let setOfVariables = {\n            \"new_degree\": setNew_degree,\n            \"new_uni\": setNew_uni,\n            \"new_desc\": setNew_desc,\n            \"new_start\": setNew_start,\n            \"new_end\": setNew_end\n        }\n        setOfVariables[e.target.name](e.target.value);\n    }\n\n    const handleUpdate = () => {\n        let values = {\n            degree: new_degree,\n            uni: new_uni,\n            desc: new_desc,\n            start: new_start,\n            end: new_end,\n            ongoing: new_ongoing\n        };\n        props.onUpdate(props.index,values)\n    }\n\n    const handleOngoing = (e) => {\n        let new_ongoing;\n        new_ongoing = new_ongoing? false : true;\n        setNew_end(\"Ongoing\");\n        setNew_ongoing(new_ongoing);\n    }\n\n    let check_box;\n    if(new_end === \"Ongoing\") {\n        check_box = <div><input type=\"checkbox\" onChange={handleOngoing} name=\"ongoing\" value={props.ongoing} checked></input>Ongoing<br/><br/></div>\n    } else {\n        check_box = <div><input type=\"checkbox\" onChange={handleOngoing} name=\"ongoing\" value={props.ongoing}></input>Ongoing<br/><br/></div>\n    }\n    return(\n        <div className=\"addEditForm\">\n            <span>\n                <label>Degree</label>\n                <input type=\"input\" onChange={handleInput} name=\"new_degree\" value={new_degree}></input>\n            </span>\n            <span>\n                <label>University/School</label>\n                <input type=\"input\" onChange={handleInput} name=\"new_uni\" value={new_uni}></input>\n            </span>\n            <span>\n                <label>Description</label>\n                <textarea onChange={handleInput} name=\"new_desc\" value={new_desc}></textarea>\n            </span>\n            <span>\n                <label>Started</label>\n                <input type=\"date\" onChange={handleInput} name=\"new_start\" value={new_start}></input>\n            </span>\n            <span>\n                <label>Completed</label>\n                <input type=\"date\" onChange={handleInput} name=\"new_end\" value={new_end} disabled={props.ongoing}></input>\n                { check_box }\n            </span>\n            <span>\n                <input type=\"button\" value=\"Submit\" onClick={handleUpdate} className=\"formButton\"></input>&nbsp;&nbsp;&nbsp;&nbsp;\n                <input type=\"button\" value=\"Cancel\" onClick={() => props.onEdit(props.index)} className=\"formButton\"></input><br/><br/>\n            </span>\n        </div>\n    );\n}\n\nconst EducationalQual = (props) => {\n\n    let educational_quals=[];\n    for (let i=0;i<props.education.length;i++) {\n        if (!props.education[i].deleted) {\n            if (props.education[i].editing) {\n                console.log(\"ACTUALLYYYYYY\")\n                educational_quals.push(<p>\n                    <EditDegree\n                    degree={props.education[i].degree}\n                    uni={props.education[i].uni}\n                    desc={props.education[i].desc}\n                    start={props.education[i].start}\n                    end={props.education[i].end}\n                    index={i}\n                    onEdit={props.onEdit}\n                    onUpdate={props.onUpdate}\n                    />\n                </p>)\n            } else {\n                educational_quals.push(\n                    <div className=\"infoSection\">\n                        <table>\n                            <tr>\n                                <th>{props.education[i].start} - {(props.education[i].ongoing)? \"Ongoing\": props.education[i].end}</th>\n                                <td className=\"infoDetails\">\n                                    <div><b>{props.education[i].degree}</b></div>\n                                    <div><b>{props.education[i].uni}</b></div>\n                                    <div className=\"infoDescr\">{props.education[i].desc}</div>\n                                </td>\n                            </tr>\n                        </table>\n                        {\n                            props.editMode ? (\n                                <span>\n                                    <input type=\"button\" value=\"Edit\" onClick={() => props.onEdit(i)} className=\"formButton\"></input>&nbsp;&nbsp;&nbsp;\n                                    <input type=\"button\" value=\"Del\" onClick={() => props.onDelete(i)} className=\"formButton\"></input><br/><br/>\n                                </span>\n                            ): null\n                        }\n                    </div>\n                    )\n            }\n        }\n    }\n    return(\n        <div className=\"section\">\n            <div className=\"sectionTitle\">Educational Qualifications</div>\n            {educational_quals}\n            {\n                props.editMode ? (\n                    <AddDegree\n                    education={props.education}\n                    onAdd={props.onAdd}\n                    />\n                ): null\n            }\n        </div>\n    );\n} \n\nexport default EducationalQual;","import React, {useState} from 'react';\nimport '../css/personalStyles.css'\n\nconst AddWork = (props) => {\n\n    const [showNewForm, setShowNewForm] = useState(false);\n    const [new_designation, setNew_designation] = useState('');\n    const [new_company, setNew_company] = useState('');\n    const [new_rnr, setNew_rnr] = useState('');\n    const [new_from, setNew_from] = useState('');\n    const [new_to, setNew_to] = useState('');\n    const [ongoing, setOngoing] = useState(false);\n    const [deleted, setDeleted] = useState(false);\n    const [editing, setEditing] = useState(false);\n\n    const displayForm = () => {\n        let currentNewForm;\n        currentNewForm = showNewForm? false: true;\n        setShowNewForm(currentNewForm);\n        setNew_designation('');\n        setNew_company('');\n        setNew_rnr('');\n        setNew_from('');\n        setNew_to('');\n        setOngoing(false);\n        setDeleted(false);\n        setEditing(false);\n    }\n\n    const submitForm = () => {\n        let values={\n            designation: new_designation,\n            company: new_company,\n            rnr: new_rnr,\n            from: new_from,\n            to: new_to,\n            ongoing: ongoing,\n            deleted: deleted,\n            editing: editing\n        }\n        props.onAdd(values)\n        displayForm()\n    }\n\n    const onType = (target,value) => {\n        let setOfVariables = {\n            \"new_designation\": setNew_designation,\n            \"new_company\": setNew_company,\n            \"new_rnr\": setNew_rnr,\n            \"new_from\": setNew_from,\n            \"new_to\": setNew_to\n        }\n        setOfVariables[target](value);\n    }\n\n    const handleInput = (e) => {\n        onType(e.target.name,e.target.value)\n    }\n\n    const handleOngoing = (e) => {\n        let new_ongoing;\n        new_ongoing = ongoing? false : true;\n        setNew_to(\"Ongoing\");\n        setOngoing(new_ongoing);\n    }\n\n    return(\n        <div>\n            <input type=\"button\" value=\"Add\" onClick={displayForm} className=\"formButton\"></input><br/><br/>\n            {\n                showNewForm ?\n                <div className=\"addEditForm\">\n                    <span>\n                        <label>Designation</label>\n                        <input type=\"input\" onChange={handleInput} name=\"new_designation\" value={new_designation}></input>\n                    </span>\n                    <span>\n                        <label>Company</label>\n                        <input type=\"input\" onChange={handleInput} name=\"new_company\" value={new_company}></input>\n                    </span>\n                    <span>\n                        <label>Roles and Responsibilites</label>\n                        <textarea onChange={handleInput} name=\"new_rnr\" value={new_rnr}></textarea>\n                    </span>\n                    <span>\n                        <label>From</label>\n                        <input type=\"date\" onChange={handleInput} name=\"new_from\" value={new_from}></input>\n                    </span>\n                    <span>\n                    <label>To</label>\n                    <input type=\"date\" onChange={handleInput} name=\"new_to\" value={new_to} disabled={ongoing}></input>&nbsp;&nbsp;\n                    <input type=\"checkbox\" onChange={handleOngoing} name=\"ongoing\" value={ongoing}></input>Ongoing\n                    </span>\n                    <span>\n                    <input type=\"button\" value=\"Submit\" onClick={submitForm} className=\"formButton\"></input>&nbsp;&nbsp;&nbsp;&nbsp;\n                    <input type=\"button\" value=\"Cancel\" onClick={displayForm} className=\"formButton\"></input><br/><br/>\n                    </span>\n                </div>\n                : null\n            }\n        </div>\n    );\n}\n\nconst EditWork = (props) => {\n\n    const [new_designation, setNew_designation] = useState(props.designation);\n    const [new_company, setNew_company] = useState(props.company);\n    const [new_rnr, setNew_rnr] = useState(props.rnr);\n    const [new_from, setNew_from] = useState(props.from);\n    const [new_to, setNew_to] = useState(props.to);\n    const [new_ongoing, setNew_ongoing] = useState(props.ongoing);\n\n    const handleInput = (e) => {\n        let setOfVariables = {\n            \"new_designation\": setNew_designation,\n            \"new_company\": setNew_company,\n            \"new_rnr\": setNew_rnr,\n            \"new_from\": setNew_from,\n            \"new_to\": setNew_to\n        }\n        setOfVariables[e.target.name](e.target.value);\n    }\n\n    const handleUpdate = () => {\n        let values = {\n            designation: new_designation,\n            company: new_company,\n            rnr: new_rnr,\n            from: new_from,\n            to: new_to,\n            ongoing: new_ongoing\n        };\n        props.onUpdate(props.index,values)\n    }\n\n    const handleOngoing = (e) => {\n        let new_ongoing;\n        new_ongoing = new_ongoing? false : true;\n        setNew_to(\"Ongoing\");\n        setNew_ongoing(new_ongoing);\n    }\n\n    let check_box;\n    if(new_to === \"Ongoing\") {\n        check_box = <span><input type=\"checkbox\" onChange={handleOngoing} name=\"ongoing\" value={props.ongoing} checked></input>Ongoing</span>\n    } else {\n        check_box = <span><input type=\"checkbox\" onChange={handleOngoing} name=\"ongoing\" value={props.ongoing}></input>Ongoing</span>\n    }\n    return(\n        <div className=\"addEditForm\">\n            <span>\n                <label>Designation</label>\n                <input type=\"input\" onChange={handleInput} name=\"new_designation\" value={new_designation}></input>\n            </span>\n            <span>\n                <label>Company</label>\n                <input type=\"input\" onChange={handleInput} name=\"new_company\" value={new_company}></input>\n            </span>\n            <span>\n                <label>Roles and Responsibilites</label>\n                <textarea onChange={handleInput} name=\"new_rnr\" value={new_rnr}></textarea>\n            </span>\n            <span>\n                <label>Year Started</label>\n                <input type=\"date\" onChange={handleInput} name=\"new_from\" value={new_from}></input>\n            </span>\n            <span>\n                <label>Year Completed</label>\n                <input type=\"date\" onChange={handleInput} name=\"new_to\" value={new_to} disabled={props.ongoing}></input>&nbsp;&nbsp;\n                { check_box }\n            </span>\n            <span>\n                <input type=\"button\" value=\"Submit\" onClick={handleUpdate} className=\"formButton\"></input>&nbsp;&nbsp;&nbsp;&nbsp;\n                <input type=\"button\" value=\"Cancel\" onClick={() => props.onEdit(props.index)} className=\"formButton\"></input><br/><br/>\n            </span>\n        </div>\n    );\n\n}\n\nconst WorkExperience = (props) => {\n\n    let work_exp=[];\n            for (let i=0;i<props.work.length;i++) {\n                if (!props.work[i].deleted) {\n                    if (props.work[i].editing) {\n                        work_exp.push(<p>\n                            <EditWork\n                            designation={props.work[i].designation}\n                            company={props.work[i].company}\n                            rnr={props.work[i].rnr}\n                            from={props.work[i].from}\n                            to={props.work[i].to}\n                            index={i}\n                            onEdit={props.onEdit}\n                            onUpdate={props.onUpdate}\n                            />\n                        </p>)\n                    } else {\n                        work_exp.push(\n                            <div className=\"infoSection\">\n                                <table>\n                                    <tr>\n                                        <th>{props.work[i].from} - {(props.work[i].ongoing)? \"Ongoing\": props.work[i].to}</th>\n                                        <td className=\"infoDetails\">\n                                            <div><b>{props.work[i].designation}</b></div>\n                                            <div><b>{props.work[i].company}</b></div>\n                                            <div className=\"infoDescr\">{props.work[i].rnr}</div>\n                                        </td>\n                                    </tr>\n                                </table>\n                                {\n                                    props.editMode ? (\n                                        <span>\n                                            <input type=\"button\" value=\"Edit\" onClick={() => props.onEdit(i)} className=\"formButton\"></input>&nbsp;&nbsp;&nbsp;\n                                            <input type=\"button\" value=\"Del\" onClick={() => props.onDelete(i)} className=\"formButton\"></input><br/><br/>\n                                        </span>\n                                    ): null\n                                }\n                                \n                            </div>)\n                    }\n                }\n            }\n    return(\n        <div className=\"section\">\n            <div className=\"sectionTitle\">Work Experience</div>\n            {work_exp}\n            {\n                props.editMode ? (\n                    <AddWork\n                    work={props.work}\n                    onAdd={props.onAdd}\n                    />\n                ): null\n            }\n        </div>\n    );\n} \n\nexport default WorkExperience;\n","import React from 'react';\nimport '../css/formStyles.css'\nimport '../css/personalStyles.css'\n\nconst SubmitCV = (props) => {\n\n    const handleSubmit = (e) => {\n        props.onSubmit(e);\n    }\n\n    let button_text='';\n    button_text = (props.editMode)? \"Submit CV\": \"Back\";\n    return(\n        <div className=\"submitSection\">\n            <input \n            type=\"button\" \n            value={button_text}\n            onClick={handleSubmit}\n            className=\"formButton\"\n            ></input>\n        </div>\n    );\n}\n\nexport default SubmitCV;","import React, {useState} from 'react';\nimport PersonalDetails from './components/personal_details';\nimport EducationalQual from './components/educational_quals';\nimport WorkExperience from './components/work_experience';\nimport SubmitCV from \"./components/submit_cv\";\nimport './css/personalStyles.css';\n\nconst App = () => {\n\n  const [editMode, setEditMode] = useState(true);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [city, setCity] = useState('');\n  const [country, setCountry] = useState('');\n  const [education, setEducation] = useState([]);\n  const [work, setWork] = useState([]);\n  const [rerender,setRerender] = useState(false)\n  \n  const handleSubmit = (e) => {\n    let education_copy = education;\n    for(let i=0; i < education_copy.length;i++) {\n      education_copy[i].editing = false;\n    }\n    setEducation(education_copy)\n\n    let work_copy = work;\n    for(let i=0; i < work_copy.length;i++) {\n      work_copy[i].editing = false;\n    }\n    setWork(work_copy)\n\n    let new_state=(editMode)?false:true;\n    setEditMode(new_state)\n  }\n\n  const handleInput = (target,value) => {\n    let setOfVariables = {\n      \"name\": setName,\n      \"email\": setEmail,\n      \"phone\": setPhone,\n      \"city\": setCity,\n      \"country\": setCountry\n    }\n    setOfVariables[target](value);\n  }\n\n  const handleEducationInput = (values) => {\n    setEducation([...education,values])\n  }\n\n  const handleEducationDelete = (index) => {\n    let education_copy = education;\n    education_copy[index].deleted = true;\n    setEducation(education_copy)\n    let rerender_copy = rerender;\n    rerender_copy = (rerender)? false : true;\n    setRerender(rerender_copy)\n  }\n\n  const HandleEducationEdit = (index) => {\n    let education_copy = education;\n    education_copy[index].editing = (education_copy[index].editing)? false : true;\n    setEducation(education_copy)\n    let rerender_copy = rerender;\n    rerender_copy = (rerender)? false : true;\n    setRerender(rerender_copy)\n  }\n\n  const handleEducationUpdate = (index,values) => {\n    let education_copy = education;\n    education_copy[index].degree = values.degree;\n    education_copy[index].uni = values.uni;\n    education_copy[index].desc = values.desc;\n    education_copy[index].start = values.start;\n    education_copy[index].end = values.end;\n    education_copy[index].ongoing = values.ongoing;\n    education_copy[index].editing = false;\n    setEducation(education_copy)\n    let rerender_copy = rerender;\n    rerender_copy = (rerender)? false : true;\n    setRerender(rerender_copy)\n  }\n\n  const handleWorkInput = (values) => {\n    setWork([...work,values])\n  }\n\n  const handleWorkDelete = (index) => {\n    let work_copy = work;\n    work_copy[index].deleted = true;\n    setWork(work_copy)\n    let rerender_copy = rerender;\n    rerender_copy = (rerender)? false : true;\n    setRerender(rerender_copy)\n  }\n\n  const handleWorkEdit = (index) => {\n    let work_copy = work;\n    work_copy[index].editing = (work_copy[index].editing)? false : true;\n    setWork(work_copy)\n    let rerender_copy = rerender;\n    rerender_copy = (rerender)? false : true;\n    setRerender(rerender_copy)\n  }\n\n  const handleWorkUpdate = (index,values) => {\n    let work_copy = work;\n    work_copy[index].designation = values.designation;\n    work_copy[index].company = values.company;\n    work_copy[index].rnr = values.rnr;\n    work_copy[index].from = values.from;\n    work_copy[index].to = values.to;\n    work_copy[index].ongoing = values.ongoing;\n    work_copy[index].editing = false;\n    setWork(work_copy)\n    let rerender_copy = rerender;\n    rerender_copy = (rerender)? false : true;\n    setRerender(rerender_copy)\n  }\n\n  return (\n    <div className=\"App\" className=\"cv_section\">\n      <PersonalDetails \n      onType={handleInput}\n      editMode={editMode}\n      name={name}\n      email={email}\n      phone={phone}\n      city={city}\n      country={country}\n      />\n      <EducationalQual\n      editMode={editMode}\n      education={education}\n      onAdd={handleEducationInput}\n      onDelete={handleEducationDelete}\n      onEdit={HandleEducationEdit}\n      onUpdate={handleEducationUpdate}\n      />\n      <WorkExperience\n      editMode={editMode}\n      work={work}\n      onAdd={handleWorkInput}\n      onDelete={handleWorkDelete}\n      onEdit={handleWorkEdit}\n      onUpdate={handleWorkUpdate}\n      />\n      <SubmitCV\n      onSubmit={handleSubmit}\n      editMode={editMode}\n      />\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}